# Use a slim Python image for a lighter container
FROM python:3.10-slim

## Set environment variables for Python: prevent creation of .pyc files and enable unbuffered output
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV PYTHONPATH=/app

# Set the working directory inside the container
WORKDIR /app

# Install system-level dependencies if needed
RUN apt-get update && apt-get install -y build-essential

# Copy requirements files and combine them
COPY ai/gst_validation/requirements.txt /app/gst_requirements.txt
COPY ai/account_mapping/requirements.txt /app/account_requirements.txt

# Create directory structure matching the app.py environment
RUN mkdir -p /app/ai/utils /app/ai/ml

# Copy all ai code
COPY ai/ /app/ai/
COPY common/ /app/common/

# Create symlinks for backward compatibility
RUN ln -s /app/ai/gst_validation /app/gst_validation && \
    ln -s /app/ai/account_mapping /app/account_mapping && \
    ln -s /app/ai/utils /app/utils && \
    ln -s /app/ai/ml /app/ml && \
    ln -s /app/ai/agents /app/agents

RUN pip install --upgrade pip && \
    pip install -r /app/gst_requirements.txt && \
    pip install -r /app/account_requirements.txt
# Create a shell script to run both processes
RUN echo '#!/bin/bash\n\
    echo "Starting GST Validation training..."\n\
    cd /app/gst_validation && python src/knn_training.py\n\
    if [ $? -ne 0 ]; then\n\
    echo "GST Validation training failed"\n\
    exit 1\n\
    fi\n\
    echo "GST Validation training completed successfully"\n\
    \n\
    echo "Starting Account Mapping training..."\n\
    cd /app/account_mapping && python src/knn_training.py\n\
    if [ $? -ne 0 ]; then\n\
    echo "Account Mapping training failed"\n\
    exit 1\n\
    fi\n\
    echo "Account Mapping training completed successfully"\n\
    touch /tmp/done' > /app/run_training.sh && \
    chmod +x /app/run_training.sh

# Set the entrypoint to run both processes
CMD ["/app/run_training.sh"]
